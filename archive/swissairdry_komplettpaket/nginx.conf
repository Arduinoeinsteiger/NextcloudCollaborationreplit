# SwissAirDry NGINX Konfiguration für Cloudflare und SSL/TLS

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Cloudflare IP-Adressen als vertrauenswürdig einstufen
    # IPv4
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    
    # IPv6
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    
    real_ip_header CF-Connecting-IP;

    # API Server Konfiguration
    server {
        listen 80;
        listen [::]:80;
        server_name api.vgnc.org;

        # Weiterleitung aller HTTP-Anfragen zu HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.vgnc.org;

        # SSL-Konfiguration
        ssl_certificate /etc/nginx/ssl/api.vgnc.org.crt;
        ssl_certificate_key /etc/nginx/ssl/api.vgnc.org.key;
        
        # Moderne TLS-Einstellungen
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # HSTS (15768000 Sekunden = 6 Monate)
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
        
        # CORS-Einstellungen
        add_header 'Access-Control-Allow-Origin' 'https://nextcloud.vgnc.org' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        # Proxy-Header-Einstellungen
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API-Server-Proxy
        location / {
            proxy_pass http://api:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 600s;
        }
    }

    # MQTT WebSocket-Server Konfiguration
    server {
        listen 8083 ssl;
        listen [::]:8083 ssl;
        server_name api.vgnc.org;

        ssl_certificate /etc/nginx/ssl/api.vgnc.org.crt;
        ssl_certificate_key /etc/nginx/ssl/api.vgnc.org.key;
        
        # WebSocket Proxy für MQTT
        location / {
            proxy_pass http://mqtt:8083;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }

    # ESP32 Firmware-Update-Server Konfiguration
    server {
        listen 8070 ssl;
        listen [::]:8070 ssl;
        server_name api.vgnc.org;

        ssl_certificate /etc/nginx/ssl/api.vgnc.org.crt;
        ssl_certificate_key /etc/nginx/ssl/api.vgnc.org.key;
        
        location / {
            proxy_pass http://api:8070;
            proxy_http_version 1.1;
            client_max_body_size 10M;  # Größere Firmware-Dateien erlauben
        }
    }
}