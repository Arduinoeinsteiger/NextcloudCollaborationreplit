version: '3.8'

services:
  # Nginx-Reverse-Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: swissairdry-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl/certs:/etc/ssl/certs:ro
      - ./ssl/private:/etc/ssl/private:ro
      - nginx-logs:/var/log/nginx
    networks:
      - swissairdry-net
    depends_on:
      - api
      - simple-api
      - exapp
    environment:
      - TZ=Europe/Zurich
      
  # PostgreSQL-Datenbank
  db:
    image: postgres:15-alpine
    container_name: swissairdry-db
    restart: unless-stopped
    ports:
      - "${PGPORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./swissairdry/db/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${PGUSER:-swissairdry}
      - POSTGRES_PASSWORD=${PGPASSWORD:-swissairdry}
      - POSTGRES_DB=${PGDATABASE:-swissairdry}
      - TZ=Europe/Zurich
    networks:
      - swissairdry-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-swissairdry}"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # MQTT-Broker (Mosquitto)
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: swissairdry-mqtt
    restart: unless-stopped
    ports:
      - "${MQTT_PORT:-1883}:1883"
      - "${MQTT_WEBSOCKET_PORT:-9001}:9001"
    volumes:
      - ./swissairdry/mqtt:/mosquitto/config
      - mqtt-data:/mosquitto/data
      - mqtt-logs:/mosquitto/log
    networks:
      - swissairdry-net
    environment:
      - TZ=Europe/Zurich
      
  # API-Server (FastAPI)
  api:
    build:
      context: .
      dockerfile: swissairdry/api/Dockerfile
    image: swissairdry-api:latest
    container_name: swissairdry-api
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    volumes:
      - ./swissairdry:/app/swissairdry
      - api-uploads:/app/uploads
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-5000}
      - API_SECRET_KEY=${API_SECRET_KEY:-swissairdry}
      - DEBUG=${DEBUG:-False}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MQTT_HOST=${MQTT_HOST:-mqtt}
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTT_TOPIC_PREFIX=${MQTT_TOPIC_PREFIX:-swissairdry/}
      - DATABASE_URL=${DATABASE_URL:-postgresql://swissairdry:swissairdry@db:5432/swissairdry}
      - TZ=Europe/Zurich
    networks:
      - swissairdry-net
    depends_on:
      - db
      - mqtt
      
  # Simple API (für ESP-Geräte & Basisoperationen)
  simple-api:
    build:
      context: .
      dockerfile: swissairdry/api/Dockerfile.simple
    image: swissairdry-simple-api:latest
    container_name: swissairdry-simple-api
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      - ./swissairdry:/app/swissairdry
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=5001
      - MQTT_HOST=${MQTT_HOST:-mqtt}
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTT_TOPIC_PREFIX=${MQTT_TOPIC_PREFIX:-swissairdry/}
      - DATABASE_URL=${DATABASE_URL:-postgresql://swissairdry:swissairdry@db:5432/swissairdry}
      - TZ=Europe/Zurich
    networks:
      - swissairdry-net
    depends_on:
      - db
      - mqtt
      
  # Nextcloud ExApp
  exapp:
    build:
      context: .
      dockerfile: swissairdry/nextcloud/Dockerfile
    image: swissairdry-exapp:latest
    container_name: swissairdry-exapp
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./swissairdry/nextcloud:/app
    environment:
      - API_URL=${API_URL:-http://api:5000}
      - NC_APP_VERSION=${NEXTCLOUD_APP_VERSION:-2.1.0}
      - TZ=Europe/Zurich
    networks:
      - swissairdry-net
    depends_on:
      - api
      
  # Nextcloud (Optional, kann auskommentiert werden wenn bereits vorhanden)
  nextcloud:
    image: nextcloud:28-apache
    container_name: swissairdry-nextcloud
    restart: unless-stopped
    ports:
      - "${NEXTCLOUD_PORT:-8080}:80"
    volumes:
      - nextcloud-data:/var/www/html
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=nextcloud
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD:-admin}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_DOMAIN:-vgnc.org localhost}
      - TZ=Europe/Zurich
    networks:
      - swissairdry-net
    depends_on:
      - db

# Docker-Volumes
volumes:
  postgres-data:
  mqtt-data:
  mqtt-logs:
  api-uploads:
  nginx-logs:
  nextcloud-data:

# Docker-Netzwerke
networks:
  swissairdry-net:
    driver: bridge