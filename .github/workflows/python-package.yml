# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest build
        # Debug-Informationen anzeigen
        echo "Projektstruktur:"
        ls -la
        echo "Python-Version:"
        python --version
        echo "pip-Version:"
        pip --version
        # Prüfen, ob pyproject.toml vorhanden ist
        echo "pyproject.toml vorhanden?"
        test -f pyproject.toml && echo "Ja" || echo "Nein"
        # pyproject.toml anzeigen, falls vorhanden
        if [ -f pyproject.toml ]; then
          echo "Inhalt von pyproject.toml:"
          cat pyproject.toml
        fi
        # Debug: Installiere mit -v für ausführlichere Fehlerausgabe
        python -m pip install -e . -v
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore=W293,W291,W292,E501,F401,F824
    - name: Test with pytest
      run: |
        # Überspringe Tests vorerst, da keine Tests eingerichtet sind
        echo "Keine Tests konfiguriert, überspringe Testphase"
        # pytest
