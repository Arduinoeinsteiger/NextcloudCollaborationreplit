version: '3.8'

services:
  # SwissAirDry API-Server
  api:
    build: ./swissairdry/api
    container_name: swissairdry-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./swissairdry/api:/app
      - ./ssl:/etc/ssl
    environment:
      - HOST=0.0.0.0
      - PORT=5000
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@db:5432/${PGDATABASE}
      - SSL_ENABLED=${SSL_ENABLED:-false}
      - SSL_CERT_PATH=${SSL_CERT_PATH:-/etc/ssl/certs/vgnc.org.cert.pem}
      - SSL_KEY_PATH=${SSL_KEY_PATH:-/etc/ssl/private/vgnc.org.key.pem}
    depends_on:
      - db
      - mqtt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - swissairdry-network

  # Simple API f체r 채ltere Ger채te
  simple-api:
    build: ./swissairdry/api/simple
    container_name: swissairdry-simple-api
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      - ./swissairdry/api:/app
      - ./ssl:/etc/ssl
    environment:
      - HOST=0.0.0.0
      - PORT=5001
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@db:5432/${PGDATABASE}
    depends_on:
      - db
      - mqtt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - swissairdry-network

  # PostgreSQL Datenbank
  db:
    image: postgres:14-alpine
    container_name: swissairdry-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./swissairdry/db/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    networks:
      - swissairdry-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # MQTT-Broker f체r IoT-Kommunikation
  mqtt:
    image: eclipse-mosquitto:2
    container_name: swissairdry-mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./swissairdry/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mqtt-data:/mosquitto/data
      - mqtt-log:/mosquitto/log
    networks:
      - swissairdry-network
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "5"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nextcloud-Server
  nextcloud:
    image: nextcloud:27-apache
    container_name: swissairdry-nextcloud
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - nextcloud-data:/var/www/html
      - ./ssl:/etc/ssl/nextcloud
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD:-admin}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_DOMAIN:-localhost}
      - APACHE_DISABLE_REWRITE_IP=1
      - OVERWRITEPROTOCOL=https
      - OVERWRITEWEBROOT=/
      - OVERWRITEHOST=${NEXTCLOUD_DOMAIN:-localhost}
    depends_on:
      - db
    networks:
      - swissairdry-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/status.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nextcloud ExApp (External App)
  exapp:
    build: ./swissairdry/nextcloud
    container_name: swissairdry-exapp
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./swissairdry/nextcloud:/app
      - ./ssl:/etc/ssl
    environment:
      - PORT=8000
      - API_URL=http://api:5000
      - MQTT_BROKER=mqtt
      - MQTT_PORT=1883
      - DEBUG=False
    depends_on:
      - api
      - nextcloud
    networks:
      - swissairdry-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nginx als Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: swissairdry-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl
    depends_on:
      - api
      - nextcloud
      - exapp
    networks:
      - swissairdry-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres-data:
  mqtt-data:
  mqtt-log:
  nextcloud-data:

networks:
  swissairdry-network:
    driver: bridge