name: SwissAirDry CI Fix

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Umgebungsvariablen für alle Jobs
env:
  PYTHONUNBUFFERED: 1
  PYTHONIOENCODING: UTF-8
  SETUPTOOLS_ENABLE_FEATURES: "legacy-editable"

jobs:
  # Parallele Tests für verschiedene Python-Versionen
  python-tests:
    name: Python ${{ matrix.python-version }} Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Nicht bei erstem Fehlschlag beenden
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Fix package structure
        run: |
          # Ausführen des verbesserten build scripts
          python fix_ci_build.py
      
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine
          python -m pip install pytest pytest-cov pytest-mock pytest-asyncio
      
      - name: Install project dependencies
        run: |
          # Erst Abhängigkeiten aus den Requirements installieren
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
          # Dann Projekt im Development-Modus installieren
          pip install -e .
      
      - name: Debug project structure
        run: |
          echo "=== DEBUG: Verzeichnisstruktur ==="
          find swissairdry -type d | sort
          echo "=== DEBUG: __init__.py Dateien ==="
          find swissairdry -name "__init__.py" | sort
          echo "=== DEBUG: Konfigurationsdateien ==="
          cat pyproject.toml
          cat setup.py
          cat MANIFEST.in
      
      - name: Run tests and coverage
        run: |
          python -m pytest --cov=swissairdry tests/
      
      - name: Generate coverage report
        run: |
          echo "## Python ${{ matrix.python-version }} Test Coverage" >> $GITHUB_STEP_SUMMARY
          python -m pytest --cov=swissairdry tests/ --cov-report=term-missing | grep -A 100 "TOTAL" >> $GITHUB_STEP_SUMMARY || true

  # Python-Paket-Build-Job
  python-package:
    name: Python package / build (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Fix package structure
        run: |
          # Ausführen des verbesserten CI-Fix-Skripts
          python fix_ci_build.py
          
          # Debug-Ausgabe
          echo "Paketstruktur wurde repariert"
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine
          # Debug: Anzeigen der installierten Versionen
          pip list | grep -E 'setuptools|wheel|build|twine'
      
      - name: Debug configuration
        run: |
          echo "=== DEBUG: Verzeichnisstruktur ==="
          find swissairdry -type d | sort
          echo "=== DEBUG: __init__.py Dateien ==="
          find swissairdry -name "__init__.py" | sort
          echo "=== DEBUG: Konfigurationsdateien ==="
          cat pyproject.toml
          cat setup.py
          cat MANIFEST.in
      
      - name: Build package
        run: |
          # Build mit ausführlicher Ausgabe
          python -m build --sdist --wheel -v
      
      - name: Check package with twine
        run: |
          python -m twine check dist/*
      
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-${{ matrix.python-version }}
          path: |
            dist/*.tar.gz
            dist/*.whl