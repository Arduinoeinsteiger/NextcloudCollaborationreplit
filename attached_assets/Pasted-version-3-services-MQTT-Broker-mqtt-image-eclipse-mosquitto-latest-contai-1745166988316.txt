version: '3'

services:
  # MQTT Broker
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: swissairdry_mqtt
    restart: always
    ports:
      - "${MQTT_PORT}:1883"
      - "${MQTT_SSL_PORT}:8883"
    volumes:
      - /sda3/mqtt/config:/mosquitto/config
      - /sda3/mqtt/data:/mosquitto/data
      - /sda3/mqtt/log:/mosquitto/log
      - /sda3/nginx/ssl:/mosquitto/certs
    healthcheck:
      test: ["CMD", "timeout", "2", "mosquitto_sub", "-t", "test", "-C", "1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - swissairdry_network

  # PostgreSQL Datenbank
  postgres:
    image: postgres:14-alpine
    container_name: swissairdry_postgres
    restart: always
    volumes:
      - /sda3/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - swissairdry_network

  # SwissAirDry API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: swissairdry_api
    restart: always
    volumes:
      - /sda3/api:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - NEXTCLOUD_URL=https://${DOMAIN}
      - NEXTCLOUD_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      mqtt:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - swissairdry_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: swissairdry_nginx
    restart: always
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - /sda3/nginx/conf.d:/etc/nginx/conf.d
      - /sda3/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - swissairdry_network

networks:
  swissairdry_network:
    external: true
