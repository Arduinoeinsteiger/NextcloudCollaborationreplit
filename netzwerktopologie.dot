digraph SwissAirDryTopologie {
    // Grundlegende Einstellungen
    graph [
        fontname = "Arial",
        fontsize = 14,
        bgcolor = "#141414",
        rankdir = "LR",
        splines = "polyline",
        concentrate = false,
        nodesep = 0.8,
        ranksep = 1.2
    ];
    
    // Knoten-Einstellungen (Standard)
    node [
        fontname = "Arial",
        fontsize = 13,
        shape = "box",
        style = "filled",
        color = "#666666",
        fontcolor = "#ffffff",
        margin = "0.3,0.2"
    ];
    
    // Kanten-Einstellungen (Standard)
    edge [
        fontname = "Arial",
        fontsize = 11,
        fontcolor = "#ffffff",
        color = "#666666",
        penwidth = 1.8
    ];
    
    // ---- GRUPPIERUNGEN ----
    
    // Geräte-Gruppe (Externe Geräte)
    subgraph cluster_devices {
        label = "Endgeräte";
        style = "filled,rounded";
        color = "#004455";
        fillcolor = "#001b29";
        fontcolor = "#55ccee";
        
        esp8266 [label="ESP8266 Geräte\n(Sensoren/Aktoren)", shape="box3d", fillcolor="#005566", color="#00ccee"];
        esp32 [label="ESP32 Geräte\n(Sensoren/Aktoren)", shape="box3d", fillcolor="#005566", color="#00ccee"];
        stm32 [label="STM32 Geräte\n(Sensoren/Aktoren)", shape="box3d", fillcolor="#005566", color="#00ccee"];
        android [label="Android App\n(Mobile Steuerung)", shape="component", fillcolor="#336699", color="#66aaff"];
        browser [label="Web-Browser\n(Desktop Steuerung)", shape="component", fillcolor="#336699", color="#66aaff"];
    }
    
    // Netzwerk-Infrastruktur-Gruppe
    subgraph cluster_network {
        label = "Netzwerk-Infrastruktur";
        style = "filled,rounded";
        color = "#553366";
        fillcolor = "#221933";
        fontcolor = "#cc99ff";
        
        router [label="Lokaler Router\n(Port-Forwarding)", shape="house", fillcolor="#663377", color="#aa66cc"];
        cloudflare [label="Cloudflare\n(DNS, CDN, SSL)", shape="doubleoctagon", fillcolor="#332277", color="#7766ff"];
    }
    
    // Server-Gruppe (Docker-Container)
    subgraph cluster_server {
        label = "SwissAirDry Server";
        style = "filled,rounded";
        color = "#443300";
        fillcolor = "#221a00";
        fontcolor = "#ffcc44";
        
        // API-Subgruppe
        subgraph cluster_api {
            label = "API-Dienste";
            style = "filled,rounded";
            color = "#554400";
            fillcolor = "#332900";
            fontcolor = "#ffdd55";
            
            api [label="Haupt-API\n(Port 5000)", shape="component", fillcolor="#665500", color="#ffcc00"];
            simple_api [label="Simple API\n(Port 5001)", shape="component", fillcolor="#665500", color="#ffcc00"];
        }
        
        // MQTT-Subgruppe
        subgraph cluster_mqtt {
            label = "MQTT-Kommunikation";
            style = "filled,rounded";
            color = "#553300";
            fillcolor = "#331f00";
            fontcolor = "#ffaa66";
            
            mqtt_broker [label="MQTT Broker\n(Port 1883)", shape="cylinder", fillcolor="#884400", color="#ff9900"];
            mqtt_websocket [label="MQTT WebSocket\n(Port 9001)", shape="cylinder", fillcolor="#884400", color="#ff9900"];
        }
        
        // Datenbank-Subgruppe
        subgraph cluster_db {
            label = "Datenbank";
            style = "filled,rounded";
            color = "#334422";
            fillcolor = "#1a2200";
            fontcolor = "#88cc66";
            
            database [label="PostgreSQL\n(Port 5432)", shape="cylinder", fillcolor="#446622", color="#88cc44"];
        }
        
        // Nextcloud-Subgruppe
        subgraph cluster_nextcloud {
            label = "Nextcloud-Integration";
            style = "filled,rounded";
            color = "#334466";
            fillcolor = "#182233";
            fontcolor = "#6699cc";
            
            nextcloud [label="Nextcloud\n(Port 8080)", shape="folder", fillcolor="#335588", color="#4477aa"];
            exapp_server [label="ExApp Server\n(Port 3000)", shape="component", fillcolor="#335588", color="#4477aa"];
            exapp_daemon [label="ExApp Daemon\n(Port 8701)", shape="component", fillcolor="#335588", color="#4477aa"];
        }
        
        // Reverse Proxy
        nginx [label="Nginx Reverse Proxy\n(Port 80/443)", shape="hexagon", fillcolor="#553355", color="#aa66aa"];
        
        // Management
        portainer [label="Portainer\n(Port 9000)", shape="tab", fillcolor="#554455", color="#aa88aa"];
    }
    
    // Internet/External
    internet [label="Internet/Externe Nutzer", shape="ellipse", fillcolor="#333344", color="#6666aa", fontcolor="#aaaaff"];
    
    // ---- VERBINDUNGEN ----
    
    // Jede Verbindung hat eine eigene Farbe und einen spezifischen Stil
    
    // ESP8266 Verbindungen
    esp8266 -> mqtt_broker [label="MQTT Daten", color="#e74c3c", penwidth=2.0];
    esp8266 -> simple_api [label="HTTP Status", color="#3498db", penwidth=1.8];
    
    // ESP32 Verbindungen
    esp32 -> mqtt_broker [label="MQTT Daten", color="#e67e22", penwidth=2.0];
    esp32 -> simple_api [label="HTTP Status", color="#2980b9", penwidth=1.8];
    
    // STM32 Verbindungen
    stm32 -> mqtt_broker [label="MQTT Daten", color="#d35400", penwidth=2.0];
    stm32 -> simple_api [label="HTTP Status", color="#1abc9c", penwidth=1.8];
    
    // Mobile App/Browser zu Router
    android -> router [label="LAN/WLAN", color="#8e44ad", penwidth=2.0];
    browser -> router [label="LAN/WLAN", color="#9b59b6", penwidth=2.0];
    
    // Router Verbindungen
    router -> nginx [label="Port 80/443", color="#c0392b", penwidth=2.2];
    router -> mqtt_broker [label="Port 1883", color="#d35400", penwidth=2.0];
    router -> cloudflare [label="Internet", color="#2c3e50", penwidth=2.5];
    
    // Cloudflare zu Internet
    cloudflare -> internet [label="Domain: vgnc.org", color="#3498db", penwidth=2.2];
    internet -> cloudflare [label="Benutzerzugriff", color="#2980b9", penwidth=2.2];
    
    // Internet zu Cloudflare (Reverse)
    cloudflare -> router [label="SSL-Traffic", color="#27ae60", penwidth=2.0];
    
    // Nginx zu Backend-Diensten
    nginx -> api [label="Proxy API", color="#f1c40f", penwidth=2.0];
    nginx -> mqtt_websocket [label="Proxy WS", color="#f39c12", penwidth=2.0];
    nginx -> nextcloud [label="Proxy NC", color="#16a085", penwidth=1.8];
    nginx -> portainer [label="Admin", color="#7f8c8d", style="dashed", penwidth=1.5];
    
    // API-zu-Datenbank
    api -> database [label="SQL Abfragen", color="#2ecc71", penwidth=2.2];
    
    // API-zu-MQTT
    api -> mqtt_broker [label="Pub/Sub Status", color="#e67e22", penwidth=2.0];
    simple_api -> mqtt_broker [label="Pub/Sub Befehle", color="#d35400", penwidth=2.0];
    
    // Nextcloud-Integration
    nextcloud -> exapp_server [label="ExApp API", color="#3498db", penwidth=1.8];
    exapp_server -> exapp_daemon [label="IPC Daten", color="#2980b9", penwidth=1.8];
    exapp_daemon -> api [label="HTTP API", color="#9b59b6", penwidth=1.8];
    exapp_daemon -> mqtt_broker [label="Benachrichtigungen", color="#8e44ad", penwidth=1.8];
    
    // MQTT Websocket zum Frontend
    mqtt_websocket -> nginx [label="Live-Updates", color="#e74c3c", penwidth=1.8];
    
    // Legende
    subgraph cluster_legend {
        label = "Legende";
        style = "filled,rounded";
        color = "#444444";
        fillcolor = "#222222";
        fontcolor = "#ffffff";
        
        leg_device [label="IoT-Geräte", shape="box3d", fillcolor="#005566", color="#00ccee"];
        leg_component [label="API-Dienste", shape="component", fillcolor="#665500", color="#ffcc00"];
        leg_database [label="Datenbanken", shape="cylinder", fillcolor="#446622", color="#88cc44"];
        leg_proxy [label="Reverse Proxy", shape="hexagon", fillcolor="#553355", color="#aa66aa"];
        leg_cloud [label="Internet", shape="ellipse", fillcolor="#333344", color="#6666aa"];
        leg_router [label="Netzwerk", shape="house", fillcolor="#663377", color="#aa66cc"];
        leg_cloudflare [label="CDN/DNS", shape="doubleoctagon", fillcolor="#332277", color="#7766ff"];
        
        // Unsichtbare Kanten für die Layout-Kontrolle
        leg_device -> leg_component [style="invis"];
        leg_component -> leg_database [style="invis"];
        leg_database -> leg_proxy [style="invis"];
        leg_proxy -> leg_cloud [style="invis"];
        leg_cloud -> leg_router [style="invis"];
        leg_router -> leg_cloudflare [style="invis"];
    }
    
    // Detaillierte Beschreibung der Datenflüsse (als Kommentar)
    // 1. IoT-Geräte (ESP8266, ESP32, STM32) senden Sensordaten über MQTT
    // 2. IoT-Geräte holen Konfiguration über HTTP vom Simple API
    // 3. Benutzer greifen über Router/Cloudflare auf die Web-Oberfläche zu
    // 4. Nginx verteilt die Anfragen an die verschiedenen Backend-Dienste
    // 5. API verbindet sich zur Datenbank für Datenspeicherung/Abfrage
    // 6. API publiziert Statusänderungen über MQTT
    // 7. Nextcloud-Integration ermöglicht Aufgabenverwaltung und Benachrichtigungen
}